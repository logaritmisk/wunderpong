<?php
/**
 * @file
 * Code for the Rating feature.
 */

include_once 'wp_rating.features.inc';


define('WP_RATING_DELTA', 0);


/**
 * Implements hook_entity_insert()
 */
function wp_rating_entity_insert($entity, $type) {
  if ($type === 'node' && $entity->type === 'wp_match') {
    $players = array(
      $entity->field_match_players[LANGUAGE_NONE][0]['target_id'],
      $entity->field_match_players[LANGUAGE_NONE][1]['target_id'],
    );

    foreach (entity_load('user', $players) as $player) {
      wp_rating_update_user_rating($player);
    }
  }
}

/**
 * Implements hook_entity_insert()
 */
function wp_rating_entity_update($entity, $type) {
  if ($type === 'node' && $entity->type === 'wp_match') {
    $players = array(
      $entity->field_match_players[LANGUAGE_NONE][0]['target_id'],
      $entity->field_match_players[LANGUAGE_NONE][1]['target_id'],
    );

    foreach (entity_load('user', $players) as $player) {
      wp_rating_update_user_rating($player);
    }
  }
}

/**
 * Update a users rating.
 */
function wp_rating_update_user_rating($user) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'wp_match')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_match_winner', 'target_id', $user->uid, '=')
    ->count();

  $won = $query->execute();

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'wp_match')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_match_loser', 'target_id', $user->uid, '=')
    ->count();

  $lost = $query->execute();

  $current_rating = ($won / ($won + $lost)) * 100;

  $user->field_user_rating[LANGUAGE_NONE][WP_RATING_DELTA]['value'] = $current_rating;

  entity_save('user', $user);
}
